# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - CloakVision

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore CloakVision.sln

      - name: Build with dotnet
        run: dotnet build CloakVision.sln --configuration Release --no-restore

      - name: dotnet publish
        run: dotnet publish CloakVision.csproj -c Release -o ./publish --no-build --self-contained false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ./publish
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: ./publish
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DD7876F0D27D4014ACCAE3B67BD9508F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BEFD343248A64ED68839F90F8FDBCD07 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B4975FBAA725448AA9B6C6991097CF85 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CloakVision'
          slot-name: 'Production'
          package: ./publish
          startup-command: 'dotnet CloakVision.dll'

      - name: Verify deployment
        run: |
          echo "Deployment completed. Checking application status..."
          sleep 30
          curl -f ${{ steps.deploy-to-webapp.outputs.webapp-url }}/health || echo "Health check failed - this is expected if no health endpoint exists"
